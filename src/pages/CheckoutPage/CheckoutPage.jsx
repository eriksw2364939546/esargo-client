"use client";

import "./CheckoutPage.scss";
import { useState } from "react";
import { ArrowLeft, Plus, CreditCard } from "lucide-react";
import { useRouter } from "next/navigation";
import { useBasket } from "@/services/serviceBasketContext/BasketContext";

const CheckoutPage = () => {
  const router = useRouter();
  const { basketItems, getTotalPrice, getItemsByRestaurant } = useBasket();
  
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ñ–æ—Ä–º—ã
  const [selectedAddressType, setSelectedAddressType] = useState("home");
  const [showAddressForm, setShowAddressForm] = useState(false);
  const [deliveryType, setDeliveryType] = useState("asap");
  const [paymentMethod, setPaymentMethod] = useState("card");
  const [selectedDate, setSelectedDate] = useState("");
  const [selectedTime, setSelectedTime] = useState("");
  
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
  const [addressData, setAddressData] = useState({
    street: "",
    city: "",
    zipCode: ""
  });
  
  const [cardData, setCardData] = useState({
    number: "",
    expiry: "",
    cvv: ""
  });
  
  const [specialInstructions, setSpecialInstructions] = useState("");

  const itemsByRestaurant = getItemsByRestaurant();
  const totalPrice = getTotalPrice();

  const handleAddressInputChange = (field, value) => {
    setAddressData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  const handleCardInputChange = (field, value) => {
    setCardData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  const handleSubmitOrder = () => {
    // –õ–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞
    console.log("–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω:", {
      items: basketItems,
      address: addressData,
      deliveryType,
      paymentMethod,
      cardData: paymentMethod === "card" ? cardData : null,
      specialInstructions,
      total: totalPrice
    });
    alert("–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω!");
  };

  if (basketItems.length === 0) {
    return (
      <main className="checkout-page">
        <div className="container">
          <div className="empty-checkout">
            <h2>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</h2>
            <button onClick={() => router.push("/")} className="back-btn">
              –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–æ–∫—É–ø–∫–∞–º
            </button>
          </div>
        </div>
      </main>
    );
  }

  return (
    <main className="checkout-page">
      <div className="container">
        <button onClick={() => router.back()} className="back-button">
          <ArrowLeft size={20} />
          –ù–∞–∑–∞–¥
        </button>
        
        <h1 className="checkout-title">–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑</h1>

        <div className="checkout-content">
          <div className="checkout-left">
            {/* –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ */}
            <section className="checkout-section">
              <h2 className="section-title">
                <span className="location-icon">üìç</span>
                –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏
              </h2>
              
              <div className="address-options">
                <label className="address-option">
                  <input
                    type="radio"
                    name="addressType"
                    value="home"
                    checked={selectedAddressType === "home"}
                    onChange={(e) => setSelectedAddressType(e.target.value)}
                  />
                  <div className="address-content">
                    <span className="address-label">–î–æ–º</span>
                    <span className="address-text">123 Rue de la Paix, Paris 75001</span>
                    <span className="address-tag">–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é</span>
                  </div>
                </label>

                <label className="address-option">
                  <input
                    type="radio"
                    name="addressType"
                    value="office"
                    checked={selectedAddressType === "office"}
                    onChange={(e) => setSelectedAddressType(e.target.value)}
                  />
                  <div className="address-content">
                    <span className="address-label">–û—Ñ–∏—Å</span>
                    <span className="address-text">456 Avenue des Champs-√âlys√©es, Paris 75008</span>
                  </div>
                </label>
              </div>

              <button 
                className="add-address-btn"
                onClick={() => setShowAddressForm(!showAddressForm)}
              >
                <Plus size={16} />
                –î–æ–±–∞–≤–∏—Ç—å –∞–¥—Ä–µ—Å
              </button>

              {showAddressForm && (
                <div className="address-form">
                  <input
                    type="text"
                    placeholder="–£–ª–∏—Ü–∞ –∏ –Ω–æ–º–µ—Ä –¥–æ–º–∞"
                    value={addressData.street}
                    onChange={(e) => handleAddressInputChange("street", e.target.value)}
                    className="address-input"
                  />
                  <input
                    type="text"
                    placeholder="–ì–æ—Ä–æ–¥"
                    value={addressData.city}
                    onChange={(e) => handleAddressInputChange("city", e.target.value)}
                    className="address-input"
                  />
                  <input
                    type="text"
                    placeholder="–ü–æ—á—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å"
                    value={addressData.zipCode}
                    onChange={(e) => handleAddressInputChange("zipCode", e.target.value)}
                    className="address-input"
                  />
                  <button 
                    className="save-address-btn"
                    onClick={() => setShowAddressForm(false)}
                  >
                    –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∞–¥—Ä–µ—Å
                  </button>
                </div>
              )}
            </section>

            {/* –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏ */}
            <section className="checkout-section">
              <h2 className="section-title">
                <span className="clock-icon">üïê</span>
                –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏
              </h2>
              
              <div className="delivery-options">
                <label className="delivery-option">
                  <input
                    type="radio"
                    name="deliveryType"
                    value="asap"
                    checked={deliveryType === "asap"}
                    onChange={(e) => setDeliveryType(e.target.value)}
                  />
                  <span>–ö–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ</span>
                </label>

                <label className="delivery-option">
                  <input
                    type="radio"
                    name="deliveryType"
                    value="scheduled"
                    checked={deliveryType === "scheduled"}
                    onChange={(e) => setDeliveryType(e.target.value)}
                  />
                  <span>–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É</span>
                </label>
              </div>

              {deliveryType === "scheduled" && (
                <div className="schedule-form">
                  <div className="schedule-inputs">
                    <div className="input-group">
                      <label>–î–∞—Ç–∞</label>
                      <input
                        type="date"
                        value={selectedDate}
                        onChange={(e) => setSelectedDate(e.target.value)}
                        className="schedule-input"
                      />
                    </div>
                    <div className="input-group">
                      <label>–í—Ä–µ–º—è</label>
                      <input
                        type="time"
                        value={selectedTime}
                        onChange={(e) => setSelectedTime(e.target.value)}
                        className="schedule-input"
                      />
                    </div>
                  </div>
                </div>
              )}
            </section>

            {/* –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã */}
            <section className="checkout-section">
              <h2 className="section-title">
                <CreditCard size={20} />
                –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
              </h2>
              
              <div className="payment-options">
                <label className="payment-option">
                  <input
                    type="radio"
                    name="paymentMethod"
                    value="card"
                    checked={paymentMethod === "card"}
                    onChange={(e) => setPaymentMethod(e.target.value)}
                  />
                  <span>–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞</span>
                </label>

                <label className="payment-option">
                  <input
                    type="radio"
                    name="paymentMethod"
                    value="paypal"
                    checked={paymentMethod === "paypal"}
                    onChange={(e) => setPaymentMethod(e.target.value)}
                  />
                  <span>PayPal</span>
                </label>
              </div>

              {paymentMethod === "card" && (
                <div className="card-form">
                  <input
                    type="text"
                    placeholder="–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã"
                    value={cardData.number}
                    onChange={(e) => handleCardInputChange("number", e.target.value)}
                    className="card-input"
                  />
                  <div className="card-row">
                    <input
                      type="text"
                      placeholder="–ú–ú/–ì–ì"
                      value={cardData.expiry}
                      onChange={(e) => handleCardInputChange("expiry", e.target.value)}
                      className="card-input card-input-small"
                    />
                    <input
                      type="text"
                      placeholder="CVV"
                      value={cardData.cvv}
                      onChange={(e) => handleCardInputChange("cvv", e.target.value)}
                      className="card-input card-input-small"
                    />
                  </div>
                </div>
              )}
            </section>

            {/* –û—Å–æ–±—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
            <section className="checkout-section">
              <h2 className="section-title">–û—Å–æ–±—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</h2>
              <textarea
                placeholder="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –¥–æ—Å—Ç–∞–≤—â–∏–∫–∞..."
                value={specialInstructions}
                onChange={(e) => setSpecialInstructions(e.target.value)}
                className="instructions-textarea"
              />
            </section>
          </div>

          <div className="checkout-right">
            <div className="order-summary">
              <h3 className="summary-title">–†–µ–∑—é–º–µ –∑–∞–∫–∞–∑–∞</h3>
              
              {Object.entries(itemsByRestaurant).map(([restaurantName, items]) => (
                <div key={restaurantName} className="restaurant-summary">
                  <h4 className="restaurant-name">{restaurantName}</h4>
                  {items.map((item) => (
                    <div key={item.id} className="order-item">
                      <span className="item-quantity">{item.quantity}x</span>
                      <span className="item-name">{item.name}</span>
                      <span className="item-price">{item.total.toFixed(2)}‚Ç¨</span>
                    </div>
                  ))}
                  <div className="subtotal">
                    <span>–î–æ—Å—Ç–∞–≤–∫–∞</span>
                    <span>{(items.reduce((sum, item) => sum + item.total, 0) * 0.1).toFixed(2)}‚Ç¨</span>
                  </div>
                  <div className="restaurant-subtotal">
                    <span>–ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π –∏—Ç–æ–≥ {restaurantName}</span>
                    <span>{(items.reduce((sum, item) => sum + item.total, 0) + items.reduce((sum, item) => sum + item.total, 0) * 0.1).toFixed(2)}‚Ç¨</span>
                  </div>
                </div>
              ))}

              <div className="total-section">
                <div className="total">
                  <span className="total-label">–ò—Ç–æ–≥–æ</span>
                  <span className="total-price">{(totalPrice * 1.1).toFixed(2)}‚Ç¨</span>
                </div>
              </div>

              <button 
                className="place-order-btn"
                onClick={handleSubmitOrder}
              >
                –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
              </button>

              <div className="terms-text">
                <i>–°–æ–≥–ª–∞—à–µ–Ω–∏—è –æ–± –æ–∫–∞–∑–∞–Ω–∏–∏ —É—Å–ª—É–≥.</i> –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É ¬´–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑¬ª, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å —É—Å–ª–æ–≤–∏—è–º–∏ –æ–∫–∞–∑–∞–Ω–∏—è —É—Å–ª—É–≥ –¥–æ—Å—Ç–∞–≤–∫–∏.
                        –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: –æ—Ñ–æ—Ä–º–ª—è—è –∑–∞–∫–∞–∑, –≤—ã –æ—Ç–∫–∞–∑—ã–≤–∞–µ—Ç–µ—Å—å –æ—Ç –ø—Ä–∞–≤–∞ –Ω–∞ –æ—Ç–º–µ–Ω—É –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, —Ç–∞–∫ –∫–∞–∫ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ.
                        –í —Å–ª—É—á–∞–µ –≤–∞—à–µ–≥–æ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ø–æ –∞–¥—Ä–µ—Å—É –¥–æ—Å—Ç–∞–≤–∫–∏, –∫—É—Ä—å–µ—Ä –æ—Å—Ç–∞–≤–∏—Ç –∑–∞–∫–∞–∑ —É –¥–≤–µ—Ä–∏. –í—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å, —á—Ç–æ –ø–æ—Å–ª–µ –¥–æ—Å—Ç–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –∑–∞–∫–∞–∑ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ –≤–∞–º.
                        –ó–∞–∫–∞–∑—ã, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –∞–ª–∫–æ–≥–æ–ª—å –∏–ª–∏ –∏–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É –∏–ª–∏ –∑–∞–∫–æ–Ω—É, –Ω–µ –±—É–¥—É—Ç –æ—Å—Ç–∞–≤–ª–µ–Ω—ã –±–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ª–∏—á–Ω–æ—Å—Ç–∏ –∏ –±—É–¥—É—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –∑–∞–≤–µ–¥–µ–Ω–∏–µ, –µ—Å–ª–∏ –≤—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç–µ.
              </div>
            </div>
          </div>
        </div>
      </div>
    </main>
  );
};

export default CheckoutPage;