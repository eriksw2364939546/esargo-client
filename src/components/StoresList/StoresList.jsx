// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç StoresList.jsx

"use client"

import "./StoresList.scss";
import { useState, useEffect, useMemo, useCallback } from "react";
import StoreCard from "../StoreCard/StoreCard";
import Loader from "../Loader/Loader";
import { useTranslations } from "next-intl";
import { getAllRestaurants } from "@/services/serviceRestorant";

const StoresList = ({ cardsToWatch = "all", initialCardsCount = 8 }) => {
	const [popularItems, setPopularItems] = useState([]);
	const [visibleCards, setVisibleCards] = useState(initialCardsCount);
	const [loading, setLoading] = useState(true);
	const [error, setError] = useState("");

	const tMPL = useTranslations("MostPopularPage");
	const tMPLInfo = useTranslations("MostPopularPage.popularInfo");

	useEffect(() => {
		const fetchPopularItems = async () => {
			try {
				setLoading(true);
				setError("");
				
				console.log('üè™ Fetching popular restaurants...');
				console.log('cardsToWatch:', cardsToWatch);
				
				// ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ–≥–ª–∞—Å–Ω–æ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
				const params = { 
					limit: cardsToWatch === "all" ? 100 : parseInt(cardsToWatch),
					sort_by: 'popular', // –í–º–µ—Å—Ç–æ 'rating' –∏—Å–ø–æ–ª—å–∑—É–µ–º 'popular'
					offset: 0
				};
				
				console.log('üìã API params:', params);
				
				const res = await getAllRestaurants(params);
				
				console.log('üì¶ API response:', res);
				
				// ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
				if (res && res.success) {
					const restaurants = res.data?.restaurants || [];
					console.log(`‚úÖ Restaurants received: ${restaurants.length}`);
					setPopularItems(restaurants);
					
					// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
					if (restaurants.length > 0) {
						console.log('üìÑ Sample restaurant:', restaurants[0]);
					}
				} else {
					console.error('‚ùå API response not successful:', res);
					setError(res?.message || "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã.");
				}
			} catch (err) {
				console.error("‚ùå Error fetching popular restaurants:", err);
				setError(err.message || "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤.");
			} finally {
				setLoading(false);
			}
		};

		fetchPopularItems();
	}, [cardsToWatch]);

	const itemsToDisplay = useMemo(() => {
		console.log('üîÑ Computing itemsToDisplay:', {
			totalItems: popularItems.length,
			cardsToWatch,
			visibleCards
		});
		
		return cardsToWatch === "all"
			? popularItems.slice(0, visibleCards)
			: popularItems.slice(0, parseInt(cardsToWatch));
	}, [popularItems, cardsToWatch, visibleCards]);

	const showMoreItems = useCallback(() => {
		setVisibleCards((prev) => {
			const newCount = prev + 8;
			console.log('‚ûï Showing more items:', newCount);
			return newCount;
		});
	}, []);

	const hasMoreItems = useMemo(() => {
		return cardsToWatch === "all" && visibleCards < popularItems.length;
	}, [cardsToWatch, visibleCards, popularItems.length]);

	// ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–≥–ª–∞—Å–Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ API
const getRestaurantImage = (restaurant) => {
    const baseUrl = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5000';
    
    if (restaurant.cover_image_url) {
        // –ï—Å–ª–∏ –ø—É—Ç—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å /, –¥–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–π URL –ë–ï–ó /api
        if (restaurant.cover_image_url.startsWith('/')) {
            // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: —É–±–∏—Ä–∞–µ–º /api –∏–∑ –ø—É—Ç–∏
            return `${baseUrl.replace('/api', '')}${restaurant.cover_image_url}`;
        }
        return restaurant.cover_image_url;
    }
    
    return "/assets/img/company-image.png";
};

	// ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞
	const getRestaurantRating = (restaurant) => {
		if (restaurant.rating) {
			return typeof restaurant.rating === 'number' 
				? restaurant.rating.toFixed(1)
				: parseFloat(restaurant.rating).toFixed(1);
		}
		return "4.5"; // –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
	};

	// ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
	const getDeliveryTime = (restaurant) => {
		if (restaurant.delivery_info?.estimated_delivery_time) {
			return `${restaurant.delivery_info.estimated_delivery_time} –º–∏–Ω`;
		}
		if (restaurant.estimated_delivery_time) {
			return `${restaurant.estimated_delivery_time} –º–∏–Ω`;
		}
		return "25-35 –º–∏–Ω"; // –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
	};

	// ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã –∑–∞–∫–∞–∑–∞
	const getMinOrderAmount = (restaurant) => {
		if (restaurant.delivery_info?.minimum_order) {
			return `–æ—Ç ${restaurant.delivery_info.minimum_order}‚Ç¨`;
		}
		if (restaurant.minimum_order) {
			return `–æ—Ç ${restaurant.minimum_order}‚Ç¨`;
		}
		return "–æ—Ç 15‚Ç¨"; // –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
	};

	// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
	if (loading) {
		return (
			<div className="stores-list-loading">
				<Loader />
				<p>–ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã...</p>
			</div>
		);
	}

	// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–∫–∏
	if (error) {
		return (
			<div className="stores-list-error">
				<p className="error-message">{error}</p>
				<button 
					onClick={() => window.location.reload()} 
					className="retry-button"
				>
					–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
				</button>
			</div>
		);
	}

	// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞
	if (popularItems.length === 0) {
		return (
			<div className="stores-list-empty">
				<p>–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
				<p className="empty-description">
					–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
				</p>
			</div>
		);
	}

	return (
		<div className="stores-list">
			<div className="stores-grid">
				{itemsToDisplay.map((restaurant) => (
					<StoreCard
						key={restaurant._id || restaurant.id}
						id={restaurant._id || restaurant.id}
						// ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–æ–ª—è –ø–æ—Å–ª–µ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏
						name={restaurant.name || restaurant.brand_name || restaurant.business_name}
						image={getRestaurantImage(restaurant)}
						rating={getRestaurantRating(restaurant)}
						deliveryTime={getDeliveryTime(restaurant)}
						minOrder={getMinOrderAmount(restaurant)}
						category={restaurant.category}
						cuisine={restaurant.cuisine}
						isOpen={restaurant.is_open || restaurant.is_currently_open}
						// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
						restaurant={restaurant}
					/>
				))}
			</div>

			{/* –ö–Ω–æ–ø–∫–∞ "–ü–æ–∫–∞–∑–∞—Ç—å –±–æ–ª—å—à–µ" */}
			{hasMoreItems && (
				<div className="load-more-section">
					<button 
						onClick={showMoreItems}
						className="load-more-button"
					>
						{tMPL("showMore")}
					</button>
					<p className="items-info">
						–ü–æ–∫–∞–∑–∞–Ω–æ {itemsToDisplay.length} –∏–∑ {popularItems.length}
					</p>
				</div>
			)}

			{/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (—Ç–æ–ª—å–∫–æ –≤ development) */}
			{process.env.NODE_ENV === 'development' && (
				<div className="debug-info" style={{ marginTop: '20px', padding: '10px', background: '#f5f5f5' }}>
					<h4>Debug Info:</h4>
					<p>Total restaurants: {popularItems.length}</p>
					<p>Visible cards: {visibleCards}</p>
					<p>Cards to watch: {cardsToWatch}</p>
					<p>Has more items: {hasMoreItems.toString()}</p>
				</div>
			)}
		</div>
	);
};

export default StoresList;